name: Build Hydra Go Binaries

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        goos: [darwin, windows, linux]
        goarch: [amd64, arm64, arm]
        exclude:
          - goos: darwin
            goarch: arm64
          - goos: darwin
            goarch: arm
          - goos: windows
            goarch: arm64
          - goos: windows
            goarch: arm
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.25'
      - name: Initialize Go modules
        run: |
          cd src
          go mod tidy
      - name: Cache Go modules
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('src/go.sum', 'src/go.mod') }}
          restore-keys: |
            ${{ runner.os }}-go-
      - name: Run Unit Tests and Collect Coverage
        run: |
          cd src
          go test -v -coverprofile=coverage.out ./...
      - name: Check Coverage Threshold
        run: |
          cd src
          COVERAGE=$(go tool cover -func=coverage.out | grep total: | awk '{print substr($3, 1, length($3)-1)}')
          echo "Current coverage: $COVERAGE%"
          echo $COVERAGE > ../.coverage_current
      - name: Compare Coverage to Previous Build
        id: coverage-compare
        run: |
          if [ -f ../.coverage_previous ]; then
            PREV=$(cat ../.coverage_previous)
            CURR=$(cat ../.coverage_current)
            echo "Previous coverage: $PREV%"
            echo "Current coverage: $CURR%"
            awk -v prev="$PREV" -v curr="$CURR" 'BEGIN { if (curr < prev) exit 1 }'
          fi
      - name: Save Coverage for Next Build
        if: always()
        run: |
          cp ../.coverage_current ../.coverage_previous
      - name: Upload Coverage Data
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: coverage-data
          path: .coverage_current
      - name: Build
        run: |
          cd src
          GOOS=${{ matrix.goos }} GOARCH=${{ matrix.goarch }} go build -v -o build/${{ matrix.goos }}_${{ matrix.goarch }}/hydra main.go
      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: hydra-${{ matrix.goos }}-${{ matrix.goarch }}
          path: src/build/${{ matrix.goos }}_${{ matrix.goarch }}/hydra*
